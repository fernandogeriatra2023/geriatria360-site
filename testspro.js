const AS='assessments_pro_v2'; let AUTH=false, CUR={score:0,interp:'—',label:'—'}, SNAP=null, ctx=null, mode='pen';
async function loginMed(){const pass=document.getElementById('med-pass').value.trim(); const cfg=await fetch('data.json').then(r=>r.json()).catch(_=>({auth:{}})); if(pass===(cfg.auth?.med_password||'medico123')){AUTH=true; document.getElementById('app').style.display='grid'; buildIVCF(); buildMNA(); buildGDS(); buildKatz(); buildLawton(); bindCanvas(); renderList(); calc();} else alert('Senha inválida');}
function tab(el){document.querySelectorAll('.step').forEach(s=>s.classList.remove('active')); el.classList.add('active'); const id=el.dataset.tab; document.querySelectorAll('.sect').forEach(s=>s.style.display='none'); document.getElementById(id).style.display='block'; if(id==='historico') renderList(); calc();}
function buildIVCF(){const box=document.getElementById('ivcf'); box.innerHTML=''; for(let i=1;i<=20;i++){const label=document.createElement('div'); label.textContent='Item '+i; label.className='hint'; label.style.width='100%'; box.appendChild(label); [0,1,2].forEach(v=>{const p=document.createElement('div'); p.className='pill'; p.textContent=v; p.dataset.key='iv'+i; p.dataset.val=v; p.onclick=(e)=>{selectPill(e.target)}; box.appendChild(p);});}}
function selectPill(p){const key=p.dataset.key, val=p.dataset.val; [...document.querySelectorAll(`.pill[data-key='${key}']`)].forEach(x=>x.classList.remove('active')); p.classList.add('active'); p.parentElement.dataset.value=val; calc();}
function buildMNA(){const qs=[{k:'mnaA',t:'Ingesta alimentar (declínio?)',opts:[['grande declínio',0],['moderado',1],['sem declínio',2]]},{k:'mnaB',t:'Perda de peso nos 3 meses',opts:[['>3 kg',0],['não sabe',1],['1–3 kg',2],['sem perda',3]]},{k:'mnaC',t:'Mobilidade',opts:[['acamada/cadeira',0],['deambula c/ auxílio',1],['normal',2]]},{k:'mnaD',t:'Estresse/doença aguda',opts:[['sim',0],['não',2]]},{k:'mnaE',t:'Problemas neuropsicológicos',opts:[['demência/depressão grave',0],['leve',1],['nenhum',2]]},{k:'mnaF',t:'IMC ou CC',opts:[['IMC<19 ou CC<31',0],['IMC 19–21',1],['IMC 21–23',2],['IMC>23',3]]},]; const box=document.getElementById('mna'); box.innerHTML=''; qs.forEach(q=>{const card=document.createElement('div'); card.className='card'; const label=document.createElement('div'); label.className='hint'; label.textContent=q.t; card.appendChild(label); q.opts.forEach(([txt,score])=>{const d=document.createElement('div'); d.className='pill'; d.textContent=`${txt} (${score})`; d.dataset.key=q.k; d.dataset.val=score; d.onclick=(e)=>{selectPill(e.target)}; card.appendChild(d);}); box.appendChild(card);});}
function buildGDS(){const pos=[1,5,7,11,13]; const box=document.getElementById('gds'); box.innerHTML=''; for(let i=1;i<=15;i++){const c=document.createElement('div'); c.className='card'; const q=document.createElement('div'); q.className='hint'; q.textContent=`Item ${i}`; c.appendChild(q); ['Não','Sim'].forEach((lab,idx)=>{const v = (pos.includes(i) ? (idx===0?1:0) : (idx===1?1:0)); const d=document.createElement('div'); d.className='pill'; d.textContent=`${lab} (+${v})`; d.dataset.key='gds'+i; d.dataset.val=v; d.onclick=(e)=>{selectPill(e.target)}; c.appendChild(d);}); box.appendChild(c);}}
function buildKatz(){const acts=['Banho','Vestuário','Higiene','Transferência','Continência','Alimentação']; const box=document.getElementById('katz'); box.innerHTML=''; acts.forEach((t,i)=>{const c=document.createElement('div'); c.className='card'; const q=document.createElement('div'); q.className='hint'; q.textContent=t; c.appendChild(q); [['Dependente',0],['Independente',1]].forEach(([lab,v])=>{const d=document.createElement('div'); d.className='pill'; d.textContent=`${lab} (+${v})`; d.dataset.key='katz'+(i+1); d.dataset.val=v; d.onclick=(e)=>{selectPill(e.target)}; c.appendChild(d);}); box.appendChild(c);});}
function buildLawton(){const acts=['Telefone','Compras','Comida','Casa','Lavanderia','Transporte','Medicação','Finanças']; const box=document.getElementById('lawton'); box.innerHTML=''; acts.forEach((t,i)=>{const c=document.createElement('div'); c.className='card'; const q=document.createElement('div'); q.className='hint'; q.textContent=t; c.appendChild(q); [['Dependente',0],['Independente',1]].forEach(([lab,v])=>{const d=document.createElement('div'); d.className='pill'; d.textContent=`${lab} (+${v})`; d.dataset.key='law'+(i+1); d.dataset.val=v; d.onclick=(e)=>{selectPill(e.target)}; c.appendChild(d);}); box.appendChild(c);});}
function getPillSum(prefix,count){let s=0; for(let i=1;i<=count;i++){const val = Number((document.querySelector(`[data-key='${prefix}${i}'].active`)||{}).dataset?.val||0); s+=val;} return s;}
function getGroupSum(keys){return keys.reduce((a,k)=> a + Number((document.querySelector(`[data-key='${k}'].active`)||{}).dataset?.val||0), 0);}
function calc(){let label='—', score=0, interp='—'; const visible = [...document.querySelectorAll('.sect')].find(s=>s.style.display!=='none'); const id = visible ? visible.id : 'triagem';
  if(id==='triagem'){const sarc=['sf1','sf2','sf3','sf4','sf5'].map(k=>Number(document.getElementById(k).value||0)).reduce((a,b)=>a+b,0); const iv = getPillSum('iv',20); score = sarc + iv + Number(document.getElementById('cfs').value||0); label='Triagem (CFS + SARC‑F + IVCF)'; const cfs = Number(document.getElementById('cfs').value||0); if(cfs<=3) {interp='Robusto';} else if(cfs==4){interp='Vulnerável';} else if(cfs<=6){interp='Fragilidade leve/moderada';} else {interp='Fragilidade grave';}}
  if(id==='cognicao'){const minicog = Number(document.getElementById('register').value||0) + Number(document.getElementById('clock_ok').value||0) + Number(document.getElementById('recall').value||0); const cdt = Number(document.getElementById('cdt_score').value||0); score = minicog + cdt; label='Cognição (Mini‑Cog + CDT)'; interp = (minicog>=3 && cdt>=4) ? 'Sugere normalidade' : 'Sugere comprometimento';}
  if(id==='mobilidade'){const morse=['mh','md','ma','mt','mm','mc'].map(k=>Number(document.getElementById(k).value||0)).reduce((a,b)=>a+b,0); const tug = Number(document.getElementById('tug').value||0); score = morse + tug; label='Mobilidade/Quedas (TUG + Morse)'; if(morse<25) interp='Risco baixo (Morse)'; else if(morse<45) interp='Risco moderado (Morse)'; else interp='Risco alto (Morse)'; if(tug>=30) interp += ' · TUG: comprometido'; else if(tug>=20) interp += ' · TUG: limítrofe'; else if(tug>=10) interp += ' · TUG: ok'; else interp += ' · TUG: normal';}
  if(id==='nutricao'){const mna = getGroupSum(['mnaA','mnaB','mnaC','mnaD','mnaE','mnaF']); score = mna; label='Nutrição (MNA‑SF)'; if(mna>=12) interp='Normal'; else if(mna>=8) interp='Risco de desnutrição'; else interp='Desnutrição provável';}
  if(id==='humor'){const gds = getPillSum('gds',15); score = gds; label='Humor (GDS‑15)'; interp = gds>=5 ? 'Sugere depressão (≥5)' : 'Sugere normalidade (<5)';}
  if(id==='funcional'){const katz = getPillSum('katz',6); const law = getPillSum('law',8); score = katz + law; label='Funcional (Katz + Lawton)'; interp = `Katz ${katz}/6 · Lawton ${law}/8`;}
  CUR={score,interp,label}; document.getElementById('score').textContent=score; document.getElementById('classif').textContent=interp; document.getElementById('label').textContent=label;}
let drawing=false; function bindCanvas(){const c=document.getElementById('cdt'); if(!c){SNAP=null; return;} SNAP=c; ctx=c.getContext('2d'); drawClockBase(); c.onmousedown=(e)=>{drawing=true; ctx.beginPath(); ctx.moveTo(e.offsetX,e.offsetY)}; c.onmousemove=(e)=>{if(!drawing)return; ctx.lineWidth= mode==='pen'? 2.2 : 14; ctx.strokeStyle= mode==='pen'? '#111' : '#fff'; ctx.lineCap='round'; ctx.lineTo(e.offsetX,e.offsetY); ctx.stroke()}; c.onmouseup=()=>drawing=false; c.onmouseleave=()=>drawing=false;}
function drawClockBase(){const w=SNAP.width,h=SNAP.height; ctx.fillStyle='#fff'; ctx.fillRect(0,0,w,h); ctx.strokeStyle='#e5e7eb'; ctx.lineWidth=2; ctx.beginPath(); ctx.arc(w/2,h/2,160,0,Math.PI*2); ctx.stroke(); ctx.font='12px Arial'; ctx.fillStyle='#9ca3af'; ['12','3','6','9'].forEach((t,i)=>{const ang=[-90,0,90,180][i]*Math.PI/180; const x=w/2+Math.cos(ang)*140, y=h/2+Math.sin(ang)*140; ctx.fillText(t,x-4,y+4)});}
function pen(){mode='pen'} function eraser(){mode='eraser'} function clearCanvas(){if(!ctx)return; drawClockBase()}
function collect(){const d={}; document.querySelectorAll('.pill.active').forEach(p=>{d[p.dataset.key]=p.dataset.val}); ['sf1','sf2','sf3','sf4','sf5','cfs','register','clock_ok','recall','tug','mh','md','ma','mt','mm','mc'].forEach(id=>{const el=document.getElementById(id); if(el) d[id]=el.value;}); return d;}
function saveAssessment(){const id=document.getElementById('pid').value.trim(); if(!id) return alert('Informe ID'); const it={id,age:document.getElementById('age').value||'',notes:document.getElementById('notes').value||'',label:CUR.label,score:CUR.score,interp:CUR.interp,at:new Date().toISOString(),data:collect(),snapshot: SNAP? SNAP.toDataURL('image/png'): ''}; const arr=all(); arr.push(it); localStorage.setItem(AS, JSON.stringify(arr)); renderList(); alert('Salvo localmente.');}
function all(){try{return JSON.parse(localStorage.getItem(AS)||'[]')}catch(_){return []}}
function renderList(){const tb=document.querySelector('#list tbody'); if(!tb) return; tb.innerHTML=''; all().sort((a,b)=>new Date(b.at)-new Date(a.at)).forEach((x,i)=>{const dt=new Date(x.at).toLocaleString('pt-BR'); const tr=document.createElement('tr'); tr.innerHTML=`<td>${x.id}</td><td>${x.label}</td><td>${dt}</td><td>${x.score}</td><td>${x.snapshot?`<img src='${x.snapshot}' style='width:50px;height:50px;object-fit:cover;border-radius:6px;border:1px solid #e5e7eb'/>`:''}</td><td><button class='btn' onclick='view(${i})'>Ver</button> <button class='btn' onclick='delIt(${i})'>Del</button></td>`; tb.appendChild(tr);});}
function delIt(i){const arr=all(); arr.splice(i,1); localStorage.setItem(AS, JSON.stringify(arr)); renderList();}
function view(i){const it=all()[i]; const w=window.open('','_blank'); w.document.write(summaryHTML(it));}
function printSummary(){const it={id:document.getElementById('pid').value||'(sem id)',age:document.getElementById('age').value||'',notes:document.getElementById('notes').value||'',label:CUR.label,score:CUR.score,interp:CUR.interp,data:collect(),at:new Date().toISOString(),snapshot: SNAP? SNAP.toDataURL('image/png'):''}; const w=window.open('','_blank'); w.document.write(summaryHTML(it)); w.print();}
function summaryHTML(it){const rows=Object.entries(it.data||{}).map(([k,v])=>`<tr><td>${k}</td><td>${v}</td></tr>`).join(''); return `<!doctype html><html><head><meta charset='utf-8'><title>Resumo</title><style>body{font-family:Arial, sans-serif;margin:24px} table{width:100%;border-collapse:collapse;margin-top:12px} td,th{border:1px solid #ddd;padding:8px}</style></head><body><h1>${it.label}</h1><p><strong>Paciente:</strong> ${it.id} | <strong>Idade:</strong> ${it.age||'-'} | <strong>Data:</strong> ${(new Date(it.at)).toLocaleString('pt-BR')}</p><p><strong>Pontuação:</strong> ${it.score} — ${it.interp}</p>${it.notes? `<p><strong>Observações:</strong> ${it.notes}</p>`:''}${it.snapshot? `<p><strong>Relógio:</strong><br><img src='${it.snapshot}' style='max-width:260px;border:1px solid #ddd;border-radius:10px'/></p>`:''}<table><thead><tr><th>Item</th><th>Valor</th></tr></thead><tbody>${rows}</tbody></table></body></html>`;}
function resetForms(){document.querySelectorAll('input[type=number], input[type=range]').forEach(e=>e.value=0); document.querySelectorAll('select').forEach(e=>e.value=0); document.querySelectorAll('.pill').forEach(e=>e.classList.remove('active')); if(ctx){ctx.clearRect(0,0,SNAP.width,SNAP.height); drawClockBase()} calc();}